name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
        continue-on-error: true

      - name: Analyze Error
        if: steps.claude.outcome == 'failure'
        run: |
          echo "::group::📋 完整錯誤輸出"
          ERROR_LOG="${{ steps.claude.outputs.error || '' }}"
          echo "$ERROR_LOG"
          echo "::endgroup::"
          
          echo ""
          echo "🔍 分析錯誤類型..."
          echo ""
          
          ERROR_TYPE="UNKNOWN"
          ERROR_DETAIL=""
          NEXT_STEPS=""
          RESET_TIME=""
          
          # 1. 檢查 Session Limit（最常見的問題）
          if echo "$ERROR_LOG" | grep -qi "session.limit\|session limit reached\|session limit"; then
            ERROR_TYPE="SESSION_LIMIT"
            ERROR_DETAIL="Claude 每日使用額度已達上限"
            RESET_TIME=$(echo "$ERROR_LOG" | grep -oP "resets \K[0-9]+[ap]m" | head -n1)
            NEXT_STEPS="
            1. 前往 https://claude.ai 查看詳細使用狀態
            2. 等待使用額度重置"
              if [ -n "$RESET_TIME" ]; then
                NEXT_STEPS="${NEXT_STEPS}（預計重置時間：$RESET_TIME）"
              fi
              NEXT_STEPS="${NEXT_STEPS}
            3. 或考慮升級到更高方案以獲得更多額度"
          
          # 2. 檢查 Rate Limit（API 速率限制）
          elif echo "$ERROR_LOG" | grep -qi "rate.limit\|rate limit\|429"; then
            ERROR_TYPE="RATE_LIMIT"
            ERROR_DETAIL="API 請求速率限制"
            NEXT_STEPS="
            1. 這是暫時性的速率限制
            2. 等待幾分鐘後重試
            3. 這不是每日額度問題，而是短時間請求過多"
          
          # 3. 檢查認證錯誤
          elif echo "$ERROR_LOG" | grep -qi "OAuth token revoked\|authentication.failed\|invalid.token\|401\|403"; then
            ERROR_TYPE="AUTHENTICATION"
            ERROR_DETAIL="
            1. 檢查 GitHub App 安裝狀態：https://github.com/settings/installations
            2. 確認「Claude Code」App 已安裝且有權限存取此 repository
            3. 檢查 repository secrets 中是否有 CLAUDE_CODE_OAUTH_TOKEN
            4. 如果問題持續，嘗試重新安裝 Claude Code App：
               - 移除：https://github.com/settings/installations
               - 重新安裝：從 install-github-app 重新連結 GitHub
            5. ⚠️ 注意：此 token 由系統自動產生，無法在 claude.ai 手動查看或產生"
          
          # 4. 檢查權限錯誤
          elif echo "$ERROR_LOG" | grep -qi "permission.denied\|forbidden\|not.allowed"; then
            ERROR_TYPE="PERMISSION"
            ERROR_DETAIL="權限不足"
            NEXT_STEPS="
            1. 檢查 workflow 檔案中的 permissions 設定
            2. 確認 GitHub token 有足夠權限
            3. 檢查 repository settings 中的 Actions permissions"
          fi
          
          # 顯示分類結果
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          
          if [ "$ERROR_TYPE" != "UNKNOWN" ]; then
            echo "::error 錯誤類型：$ERROR_TYPE::$ERROR_DETAIL"
            echo ""
            echo "**錯誤類型：$ERROR_TYPE**"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo ""
            echo "**錯誤說明：**"
            echo "$ERROR_DETAIL"
            echo ""
            if [ -n "$RESET_TIME" ]; then
              echo "⏰ **額度重置時間：** $RESET_TIME"
              echo ""
            fi
            echo "🔧 **建議處理步驟：**"
            echo "$NEXT_STEPS"
          else
            echo "::error 未知錯誤::無法自動分類此錯誤"
            echo ""
            echo "⚠️  **無法自動分類此錯誤**"
            echo ""
            echo "📋 **建議檢查步驟：**"
            echo "1. 查看上方「📋 完整錯誤輸出」區塊"
            echo "2. 前往 https://claude.ai 檢查帳戶狀態（最常見原因是使用額度）"
            echo "3. 檢查 CLAUDE_CODE_OAUTH_TOKEN 是否有效"
            echo "4. 如果問題持續，請將錯誤訊息複製到 GitHub Issue"
          fi
          
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "::notice::💡 完整的錯誤輸出已摺疊在上方「📋 完整錯誤輸出」區塊中"
          
          exit 1
          # Optional: Give a custom prompt to Claude. If this is not specified, Claude will perform the instructions specified in the comment that tagged it.
          # prompt: 'Update the pull request description to include a summary of changes.'

          # Optional: Add claude_args to customize behavior and configuration
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/sdk#command-line for available options
          # claude_args: '--model claude-opus-4-1-20250805 --allowed-tools Bash(gh pr:*)'

